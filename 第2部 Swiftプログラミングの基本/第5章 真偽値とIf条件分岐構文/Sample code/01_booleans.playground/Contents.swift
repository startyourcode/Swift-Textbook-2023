/*:
 # booleans
 __`真偽値`__
 
 Swiftの基本的なデータは文字列、整数、少数点数の他に、**真偽値**があります。
 他のプログラミング言語や一般的な学術用語においては、**論理値**と呼ぶこともあります。
 
 Swiftの真偽値は「`true`か、`false`か」の二つの値で表現されるデータであり、`Bool`型として定義されています。

 ```
 true
 false
 ```
 
 実際のプログラムにおいて、`Bool`値は頻繁に使用されます。
 例として、整数の`8`が「指定した数の倍数であるかどうか」を調べてみましょう。

 ```
 let eight = 8
 ```

 整数インスタンスから呼び出せる`isMultiple(of:)`メソッドは、その整数が「指定した値の倍数であるかどうか」を評価します。
  
 ```
 eight.isMultiple(of: 2) // true
 ```

 `8`は`2`の倍数です。
 したがって、このコードを実行すると`true`を返します。
 \
 \
 `8`は`3`の倍数ではありません。
 したがって、次のコードを実行すると`false`を返します。

 ```
 eight.isMultiple(of: 3) // false
 ```

 単純な仕組みですが、「真偽値による論理演算」はコンピュータ回路の重要な概念です。
 なお、他のプログラミング言語では真偽値を`0`と`1`で代用できる場合もあります。
 Swiftは意図しない演算を防ぐために、真偽値は明確に`true`と`false`だけで表現します。
 */
true
false

let eight = 8
eight.isMultiple(of: 2)
eight.isMultiple(of: 3)

