/*:
 # initilizers
 __`標準イニシャライザとメンバーワイズイニシャライザ`__
 \
 \
 構造体のインスタンスを作成するには、その型で提供されるイニシャライザを呼び出します。
 イニシャライザは「すべてのプロパティに値を設定して、インスタンスを作成する」ための特別なメソッドです。
 
 ある型のインスタンスを作成するには、「そのすべてのプロパティに値が設定されている」必要があります。
 インスタンスを作成するために行われる、それらの手続き全般を**初期化**といいます。
 \
 \
 プログラマーが実装しなくても、「自動的に提供されるイニシャライザ」のひとつが標準イニシャライザです。
 標準イニシャライザは、型名の後に括弧`()`があるだけのシンプルなメソッドです。
 標準イニシャライザは、「すべてのプロパティに既定値が設定されている構造体」に提供されます。
 \
 \
 以下に定義する`SomeType`型は、すべてのプロパティに既定値が設定済みの構造体です。
 したがって、標準イニシャライザが自動的に提供されます。
 
 ```swift
 struct SomeType {
     var number = 123
     var alphabet = "ABC"
 }
 var someValue = SomeType()
 ```
 
 構造体に「既定値が設定されていないプロパティ」がひとつでもあると、標準イニシャライザは提供されなくなります。
 その代わりに、メンバーワイズイニシャライザが提供されます。
 メンバーワイズイニシャライザは、パラメータリストですべてのプロパティに既定値を設定できます。
 \
 \
 以下に定義する`AnotherType`型では、`number`プロパティに既定値が設定されていません。
 したがって、メンバーワイズイニシャライザが自動的に提供されます。
 
 ```swift
 struct AnotherType {
     var number: Int
     var alphabet = "ABC"
 }
 var anotherValue = AnotherType(number: 123, alphabet: "XYZ")
 ```
 
 なお、型の定義として既定値が設定されていれば、そのプロパティだけ値の指定を省略することもできます。
 
 ```swift
 var anotherValue = AnotherType(number: 123)
 ```
 
 プログラマーが構造体に「独自の初期化手続き」を実装することもできます。
 つまり、プログラマー自身が「独自のイニシャライザを定義する」ということです。
 そうした場合、構造体に標準イニシャライザとメンバーワイズイニシャライザは提供されません。
 自動的に提供されるこれらのイニシャライザは便宜的なものです。
 したがって、独自のイニシャライザによる「意図された初期化手続き」がある場合は、そちらを使用すべきだからです。
 */
struct SomeType {
    var number = 123
    var alphabet = "ABC"
}
var someValue = SomeType()

struct AnotherType {
    var number: Int
    var alphabet = "ABC"
}
var anotherValue = AnotherType(number: 123)
